@model RegisterViewModel
@{   

}

<div id="app">
    <el-image class="login_left" src="/image/login_left.jpg" fit="cover"></el-image>
    <div class="login_right">
        <el-card shadow="always" class="login_box">
            <el-tabs v-model="actionName">
                <el-tab-pane :label="actionName" name="注册">
                    <el-form :model="form" style="margin-top: 30px;" ref="formRef" :rules="rules">
                        @Html.AntiForgeryToken()
                        <el-form-item prop="UserName">
                            <el-input v-model="form.UserName" placeholder="用户名" v-on:keyup.enter="$refs.Email.focus()"></el-input>
                        </el-form-item>
                        <el-form-item prop="Email">
                            <el-input v-model="form.Email" placeholder="邮箱" ref="Email" v-on:keyup.enter="$refs.Password.focus()"></el-input>
                        </el-form-item>
                        <el-form-item prop="Password">
                            <el-input type="password" v-model="form.Password" ref="Password" placeholder="密码" v-on:keyup.enter="$refs.ConfirmPassword.focus()"></el-input>
                        </el-form-item>
                        <el-form-item prop="ConfirmPassword">
                            <el-input type="password" v-model="form.ConfirmPassword" ref="ConfirmPassword" placeholder="确认密码" v-on:keyup.enter="$refs.FirstQuestion.focus()"></el-input>
                        </el-form-item>

                        <el-form-item prop="FirstQuestion">
                            <el-input v-model="form.FirstQuestion" ref="FirstQuestion" placeholder="密保问题一：你最喜欢的动漫" v-on:keyup.enter="$refs.SecondQuestion.focus()"></el-input>
                        </el-form-item>
                        <el-form-item prop="SecondQuestion">
                            <el-input v-model="form.SecondQuestion" ref="SecondQuestion" placeholder="密保问题二：你最喜欢的名著" v-on:keyup.enter="submit"></el-input>
                        </el-form-item>
                        <div style="text-align: right;margin-top: 40px">
                            <el-button type="primary" v-on:click="submit">确定</el-button>
                            <el-button v-on:click="back">返回</el-button>
                        </div>
                    </el-form>
                </el-tab-pane>
            </el-tabs>
           
        </el-card>
        <footer style="width:90%;position: absolute; bottom: 0;">
            <partial name="_Footer" />
        </footer>
    </div>
</div>



<script>
    const App = {
        data() {
            return {
                actionName: "注册",
                rules: {
                    UserName: [
                        {
                            required: true,
                            message: '用户名不能为空',
                            trigger: 'change',
                        },
                    ],
                    Email: [
                        {
                            required: true,
                            validator: (rule, value, callback) => {

                                const emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
                                if (emailRegex.test(value)) {
                                    callback(); // 校验通过
                                } else {
                                    callback(new Error('请输入有效的邮箱地址')); // 校验失败
                                }
                            },
                            trigger: 'change'
                        },
                    ],
                    Password: [
                        {
                            required: true,
                            message: '密码不能为空',
                            trigger: 'change',
                        }
                    ],
                    ConfirmPassword: [
                        { 
                            required: true, 
                            validator: (rule, value, callback) => {
                                if (value === '') {
                                    callback(new Error('请再次输入密码'))
                                } else if (value !== this.form.Password) {
                                    callback(new Error('两次输入密码不一致!'))
                                } else {
                                    callback()
                                }
                            },
                            trigger: 'change'
                        }

                    ],
                    FirstQuestion: [
                        {
                            required: true,
                            message: '密保问题一不能为空',
                            trigger: 'change',
                        }
                    ],
                    SecondQuestion: [
                        {
                            required: true,
                            message: '密保问题二不能为空',
                            trigger: 'change',
                        }
                    ]
                },
                form: {
                    UserName: "",
                    Email: "",
                    Password: "",
                    ConfirmPassword: '',
                    FirstQuestion: '',
                    SecondQuestion: '',
                }
            }
        },
        methods: {
            submit() {

                this.$refs.formRef.validate(async (valid) => {
                    if (valid) {
                        
                        let res = await axios.post('/account/register', {
                            ...this.form,

                        });
                        ElementPlus.ElMessage({
                            message: "注册成功",
                            type: 'success',
                        })
                        window.location.href = res.data;

                    } else {
                        return false
                    }
                })
            },
            back() { 
                window.history.go(-1)
            }
        }
    };
    const app = Vue.createApp(App);
    app.use(ElementPlus);
    app.mount("#app");
</script>

<style>
    #app {
        height: 100%;
        display: flex;
    }
    .login_left {
        object-fit: cover;
        height: 100%;
        width: 375px;
        background-size: cover;
    }
    .login_right {
        padding: 10px 20px;
        flex: 1;
        position: relative;
    }
    /* 登录小容器 */
    .login_box {
        box-sizing: border-box;
        width: 480px;
        border-radius: 15px;
        box-shadow: 0 20px 50px 0 hsl(0deg 0% 64% / 29%);
        margin: 80px auto 0;
        padding: 25px 30px;
    }
   
</style>

