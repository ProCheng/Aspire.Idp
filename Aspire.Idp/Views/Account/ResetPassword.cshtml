@model ResetPasswordViewModel
@{
}


<div id="app">
    <div class="login_right">
        <el-card shadow="always" class="login_box">
            <el-tabs v-model="actionName">
                <el-tab-pane label="重置您的密码" name="重置您的密码">
                    <el-form :model="form" label-width="120px" style="margin-top: 30px;" ref="formRef" :rules="rules">

                        @Html.AntiForgeryToken()
                        <el-form-item label="userId">
                            <el-input disabled v-model="form.userId" placeholder="userId"></el-input>
                        </el-form-item>
                        <el-form-item label="随机校验码">
                            <el-input disabled v-model="form.AccessCode" placeholder="随机校验码"></el-input>
                        </el-form-item>
                     
                        <el-form-item prop="Password" label="密码">
                            <el-input type="password" v-model="form.Password" ref="Password" placeholder="密码" v-on:keyup.enter="$refs.ConfirmPassword.focus()"></el-input>
                        </el-form-item>
                        <el-form-item prop="ConfirmPassword" label="确认密码">
                            <el-input type="password" v-model="form.ConfirmPassword" ref="ConfirmPassword" placeholder="确认密码" v-on:keyup.enter="submit"></el-input>
                        </el-form-item>

                        <div style="text-align: right;margin-top: 40px">
                            <el-button type="primary" v-on:click="submit">确定</el-button>
                            <el-button v-on:click="back">返回</el-button>
                        </div>
                    </el-form>


                </el-tab-pane>
            </el-tabs>

        </el-card>
    </div>
</div>

<script>
    const App = {
        data() {
            return {
                actionName: "重置您的密码",
                rules: {
                    Password: [
                        {
                            required: true,
                            message: '密码不能为空',
                            trigger: 'change',
                        }
                    ],
                    ConfirmPassword: [
                        {
                            required: true,
                            validator: (rule, value, callback) => {
                                if (value === '') {
                                    callback(new Error('请再次输入密码'))
                                } else if (value !== this.form.Password) {
                                    callback(new Error('两次输入密码不一致!'))
                                } else {
                                    callback()
                                }
                            },
                            trigger: 'change'
                        }

                    ],
                },
                form: {
                    AccessCode: '@Model.AccessCode',
                    Password: '',
                    ConfirmPassword: '',
                    userId: '@Model.userId',
                    Code: '@Model.Code'
                }
            }
        },
        methods: {
            submit() {
                this.$refs.formRef.validate(async (valid) => {
                    if (valid) {
                        let res = await axios.put('/Account/ResetPassword', {
                            ...this.form,
                        });
                        ElementPlus.ElMessage({
                            message: "更新成功",
                            type: 'success',
                        })
                        window.location.href = res.data;
                    } else {
                        return false
                    }
                })
            },
            back() {
                window.history.go(-1)
            }
        }
    };
    const app = Vue.createApp(App);
    app.use(ElementPlus);
    app.mount("#app");
</script>

<style>
    #app {
        height: 100%;
        display: flex;
    }

    .login_right {
        padding: 10px 20px;
        flex: 1;
    }
    /* 登录小容器 */
    .login_box {
        box-sizing: border-box;
        width: 480px;
        border-radius: 15px;
        box-shadow: 0 20px 50px 0 hsl(0deg 0% 64% / 29%);
        margin: 10% auto 0;
        padding: 25px 30px;
    }
</style>

