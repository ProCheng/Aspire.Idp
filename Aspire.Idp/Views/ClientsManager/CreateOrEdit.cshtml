@model Aspire.Idp.Controllers.Client.ClientDto


<div id="app">
    <div class="login_right">
        <el-card shadow="always" class="login_box">
            <el-tabs v-model="actionName">
                <el-tab-pane :label="actionName" :name="actionName">
                    <el-form :model="form" label-width="160px" style="margin-top: 30px;" ref="formRef" :rules="rules">

                        <el-row>
                            <el-col :span="12">
                                <el-form-item prop="ClientId" label="客户端Id">
                                    <el-input v-model="form.ClientId" placeholder="客户端Id" v-on:keyup.enter="$refs.ClientName.focus()"></el-input>
                                </el-form-item>
                            </el-col>
                            <el-col :span="12">
                                <el-form-item prop="ClientName" label="客户端名称">
                                    <el-input v-model="form.ClientName" placeholder="客户端名称" ref="ClientName" v-on:keyup.enter="$refs.ClientSecrets.focus()"></el-input>
                                </el-form-item>
                            </el-col>
                        </el-row>

                        <el-row>
                            <el-col :span="12">
                                <el-form-item label="客户端密钥">
                                    <el-input v-model="form.ClientSecrets" placeholder="客户端密钥" ref="ClientSecrets" v-on:keyup.enter="$refs.Description.focus()"></el-input>
                                </el-form-item>
                            </el-col>
                            <el-col :span="12">
                                <el-form-item label="描述">
                                    <el-input v-model="form.Description" placeholder="描述" ref="Description" v-on:keyup.enter="$refs.AllowedGrantTypes.focus()"></el-input>
                                </el-form-item>
                            </el-col>
                        </el-row>

                        <el-row>
                            <el-col :span="12">
                                <el-form-item prop="AllowedGrantTypes" label="授权类型">
                                    <el-input v-model="form.AllowedGrantTypes" placeholder="授权类型" ref="AllowedGrantTypes" v-on:keyup.enter="$refs.AllowAccessTokensViaBrowser.focus()"></el-input>
                                </el-form-item>
                            </el-col>
                            <el-col :span="12">
                                <el-form-item prop="AllowAccessTokensViaBrowser" label="token浏览器传递">
                                    <el-select v-model="form.AllowAccessTokensViaBrowser" style="width: 100%" ref="AllowAccessTokensViaBrowser" v-on:keyup.enter="$refs.AllowedScopes.focus()"
                                               placeholder="token通过浏览器传递">
                                        <el-option label="True" value="True"></el-option>
                                        <el-option label="False" value="False"></el-option>
                                    </el-select>
                                </el-form-item>
                            </el-col>
                        </el-row>

                        <el-row>
                            <el-col :span="12">
                                <el-form-item prop="AllowedScopes" label="作用域">
                                    <el-input autosize
                                              type="textarea" v-model="form.AllowedScopes" placeholder="作用域" ref="AllowedScopes" v-on:keyup.enter="$refs.AllowedCorsOrigins.focus()"></el-input>
                                </el-form-item>
                            </el-col>
                            <el-col :span="12">
                                <el-form-item prop="AllowedCorsOrigins" label="跨域域名">
                                    <el-input autosize
                                              type="textarea" v-model="form.AllowedCorsOrigins" placeholder="跨域域名" ref="AllowedCorsOrigins" v-on:keyup.enter="$refs.RedirectUris.focus()"></el-input>
                                </el-form-item>
                            </el-col>
                        </el-row>


                        <el-row>
                            <el-col :span="12">
                                <el-form-item prop="RedirectUris" label="回调地址">
                                    <el-input autosize
                                              type="textarea" v-model="form.RedirectUris" placeholder="回调地址" ref="RedirectUris" v-on:keyup.enter="$refs.PostLogoutRedirectUris.focus()"></el-input>
                                </el-form-item>
                            </el-col>
                            <el-col :span="12">
                                <el-form-item prop="PostLogoutRedirectUris" label="退出的回调">
                                    <el-input autosize
                                              type="textarea" v-model="form.PostLogoutRedirectUris" placeholder="退出的回调" ref="PostLogoutRedirectUris" v-on:keyup.enter="submit"></el-input>
                                </el-form-item>
                            </el-col>
                        </el-row>

                        <div style="text-align: right;margin-top: 40px">
                            <el-button type="primary" v-on:click="submit">确定</el-button>
                            <el-button v-on:click="back">返回</el-button>
                        </div>
                    </el-form>
                </el-tab-pane>
            </el-tabs>

        </el-card>
    </div>
</div>



<script>
    const App = {
        data() {
            return {
                actionName: Tools.DecodeHtml("@ViewData["title"]"),
                rules: {
                    ClientId: [
                        {
                            required: true,
                            message: '客户端Id',
                            trigger: 'change',
                        },
                    ],
                    ClientName: [
                        {
                            required: true,
                            message: '客户端名称不能为空',
                            trigger: 'change',
                        },
                    ],
                  
                  
                    AllowedGrantTypes: [
                        {
                            required: true,
                            message: '授权类型不能为空',
                            trigger: 'change',
                        },
                    ],
                    AllowAccessTokensViaBrowser: [
                        {
                            required: true,
                            message: '允许将token通过浏览器传递不能为空',
                            trigger: 'change',
                        },
                    ],
                    AllowedScopes: [
                        {
                            required: true,
                            message: '作用域不能为空',
                            trigger: 'change',
                        },
                    ],
                    AllowedCorsOrigins: [
                        {
                            required: true,
                            message: '跨域域名不能为空',
                            trigger: 'change',
                        },
                    ],
                    RedirectUris: [
                        {
                            required: true,
                            message: '回调地址不能为空',
                            trigger: 'change',
                        },
                    ],
                    PostLogoutRedirectUris: [
                        {
                            required: true,
                            message: '退出的回调不能为空',
                            trigger: 'change',
                        },
                    ],
                 
                },
                form: {
                    Id: @Model.Id,
                    ClientId: this.formatting("@Model.ClientId"),
                    ClientName: this.formatting("@Model.ClientName"),
                    ClientSecrets: this.formatting("@Model.ClientSecrets"),
                    Description: this.formatting("@Model.Description"),
                    AllowedGrantTypes: this.formatting("@Model.AllowedGrantTypes"),
                    AllowAccessTokensViaBrowser: this.formatting("@Model.AllowAccessTokensViaBrowser" || "True"),
                    AllowedScopes: this.formatting("@Model.AllowedScopes"),
                    AllowedCorsOrigins: this.formatting("@Model.AllowedCorsOrigins"),
                    RedirectUris: this.formatting("@Model.RedirectUris"),
                    PostLogoutRedirectUris: this.formatting("@Model.PostLogoutRedirectUris"),
                }
            }
        },
        methods: {
            formatting(str) { 
                return Tools.DecodeHtml(str.replace(/,/g, ',\r\n'))
            },
            submit() {

                for (var item in this.form) {
                    if (Object.prototype.toString.call(this.form[item]) == '[object String]')
                        this.form[item] = this.form[item].replace(/[\r\n]/g, '');
                }

                this.$refs.formRef.validate(async (valid) => {
                    if (valid) {

                        let res = await axios.post('/ClientsManager/Save', {
                            ...this.form,

                        });
                        ElementPlus.ElMessage({
                            message: "操作成功",
                            type: 'success',
                        })
                        window.location.href = res.data;

                    } else {
                        return false
                    }
                })
            },
            back() {
                window.history.go(-1)
            }
        }
    };
    const app = Vue.createApp(App);
    app.use(ElementPlus);
    app.mount("#app");
</script>

<style>
    #app {
        height: 100%;
        display: flex;
    }


    .login_right {
        padding: 10px 20px;
        flex: 1;
    }
    /* 登录小容器 */
    .login_box {
        box-sizing: border-box;
        width: 95%;
        border-radius: 15px;
        box-shadow: 0 20px 50px 0 hsl(0deg 0% 64% / 29%);
        margin: 10px auto 0;
        padding: 25px 30px;
    }

  
</style>















