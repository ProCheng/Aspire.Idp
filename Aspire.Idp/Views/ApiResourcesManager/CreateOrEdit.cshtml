@model Aspire.Idp.Controllers.ApiResource.ApiResourceDto

<div id="app">
    <div class="login_right">
        <el-card shadow="always" class="login_box">
            <el-tabs v-model="actionName">
                <el-tab-pane :label="actionName" :name="actionName">
                    <el-form :model="form" label-width="160px" style="margin-top: 30px;" ref="formRef" :rules="rules">

                        <el-row>
                            <el-col :span="12">
                                <el-form-item prop="Name" label="Api资源名称">
                                    <el-input v-model="form.Name" placeholder="Api资源名称" v-on:keyup.enter="$refs.DisplayName.focus()"></el-input>
                                </el-form-item>
                            </el-col>
                            <el-col :span="12">
                                <el-form-item prop="DisplayName" label="显示名称">
                                    <el-input v-model="form.DisplayName" placeholder="显示名称" ref="DisplayName" v-on:keyup.enter="$refs.Description.focus()"></el-input>
                                </el-form-item>
                            </el-col>
                        </el-row>


                        <el-row>
                            <el-col :span="12">
                                <el-form-item prop="Description" label="描述">
                                    <el-input autosize
                                              type="textarea" v-model="form.Description" placeholder="描述" ref="Description" v-on:keyup.enter="$refs.UserClaims.focus()"></el-input>
                                </el-form-item>
                            </el-col>
                            <el-col :span="12">
                                <el-form-item prop="UserClaims" label="允许的声明">
                                    <el-input autosize
                                              type="textarea" v-model="form.UserClaims" placeholder="允许的声明" ref="UserClaims" v-on:keyup.enter="$refs.Scopes.focus()"></el-input>
                                </el-form-item>
                            </el-col>
                        </el-row>


                        <el-row>
                            <el-col :span="12">
                                <el-form-item prop="Scopes" label="作用域">
                                    <el-input autosize
                                              type="textarea" v-model="form.Scopes" placeholder="作用域" ref="Scopes" v-on:keyup.enter="submit"></el-input>
                                </el-form-item>
                            </el-col>

                        </el-row>

                        <div style="text-align: right;margin-top: 40px">
                            <el-button type="primary" v-on:click="submit">确定</el-button>
                            <el-button v-on:click="back">返回</el-button>
                        </div>
                    </el-form>
                </el-tab-pane>
            </el-tabs>

        </el-card>
    </div>
</div>



<script>
    const App = {
        data() {
            return {
                actionName: Tools.DecodeHtml("@ViewData["title"]"),
                rules: {
                    Name: [
                        {
                            required: true,
                            message: 'Api资源名称不能为空',
                            trigger: 'change',
                        },
                    ],
                    UserClaims: [
                        {
                            required: true,
                            message: '允许的声明不能为空',
                            trigger: 'change',
                        },
                    ],
                    Scopes: [
                        {
                            required: true,
                            message: '作用域不能为空',
                            trigger: 'change',
                        },
                    ]

                },
                form: {
                    Id: @Model.Id,
                    Name: this.formatting("@Model.Name"),
                    DisplayName: this.formatting("@Model.DisplayName"),
                    Description: this.formatting("@Model.Description"),
                    UserClaims: this.formatting("@Model.UserClaims"),
                    Scopes: this.formatting("@Model.Scopes"),
                 }
            }
        },
        methods: {
            formatting(str) {
                return Tools.DecodeHtml(str.replace(/,/g, ',\r\n'))
            },
            submit() {

                for (var item in this.form) {
                    if (Object.prototype.toString.call(this.form[item]) == '[object String]')
                        this.form[item] = this.form[item].replace(/[\r\n]/g, '');
                }

                this.$refs.formRef.validate(async (valid) => {
                    if (valid) {

                        let res = await axios.post('/ApiResourcesManager/Save', {
                            ...this.form,

                        });
                        ElementPlus.ElMessage({
                            message: "操作成功",
                            type: 'success',
                        })
                        window.location.href = res.data;

                    } else {
                        return false
                    }
                })
            },
            back() {
                window.history.go(-1)
            }
        }
    };
    const app = Vue.createApp(App);
    app.use(ElementPlus);
    app.mount("#app");
</script>

<style>
    #app {
        height: 100%;
        display: flex;
    }


    .login_right {
        padding: 10px 20px;
        flex: 1;
    }
    /* 登录小容器 */
    .login_box {
        box-sizing: border-box;
        width: 95%;
        border-radius: 15px;
        box-shadow: 0 20px 50px 0 hsl(0deg 0% 64% / 29%);
        margin: 10px auto 0;
        padding: 25px 30px;
    }

</style>















